from fpdf import FPDF
from datetime import datetime
import io
import numpy as np
def generate_pdf(order_data, company_logo_path, pecset_path , bevitel=None, sorszam=None):
    pdf = FPDF(orientation="P", unit="mm", format="A4")
    pdf.set_auto_page_break(auto=True, margin=10)
    pdf.add_page()

    start_x = 10  # T√°bl√°zat kezd≈ëindex
    # C√©g log√≥ bal fels≈ë sarokban
    pdf.image(company_logo_path, x=10, y=8, w=40)

    # üîπ C√©g el√©rhet≈ës√©gek a jobb fels≈ë sarokba
    pdf.set_font("Arial", "", 10)
    pdf.set_xy(140, 10)  # Jobb fels≈ë sarokba igaz√≠t√°s
    pdf.multi_cell(60, 5,
                   "Telefon: +40 740 169 912\nEmail: glaserdiuvegezo@gmail.com\n C√≠m: Gyergy√≥szentmikl√≥s, \n Kossuth Lajos utca, 233",
                   align="R")

    # √Åraj√°nlat c√≠m √©s d√°tum k√∂z√©pen
    pdf.set_xy(10, 15)  # √öj poz√≠ci√≥ be√°ll√≠t√°sa a k√∂vetkez≈ë tartalomhoz
    pdf.set_font("Arial", "B", 14)
    pdf.cell(0, 10, "√ÅRAJ√ÅNLAT", ln=1, align="C")
    pdf.set_font("Arial", "", 12)
    pdf.cell(0, 10, f"D√°tum: {datetime.now().strftime('%Y-%m-%d')}", ln=0.5, align="C")
    pdf.cell(0, 10, f"Aj√°nlatot k√©rte: {order_data['Megrendelo_neve'].iloc[0]}", ln=0.5, align="C")
    if bevitel == "file":
        pdf.cell(0, 10,f"Sorsz√°m: {order_data['Sorsz√°m_Megrendel√©s'].iloc[0]}", ln=0.5, align="C")
    else:
        pdf.cell(0, 10, f"Sorsz√°m: {sorszam}", ln=0.5, align="C")
    pdf.ln(5)  # T√°vols√°g a t√°bl√°zat el≈ëtt

    # üîπ T√°bl√°zat fejl√©c
    pdf.set_font("Arial", "B", 10.5)
    column_widths = [45, 20, 20, 20, 10, 20, 15, 22, 22]
    headers = ["√úveg t√≠pusa", "Extr√°k", "Sz√©less√©g", "Magass√°g", "Db", "Ter√ºlet", "Adal√©k", "√ñsszter√ºlet", "√År"]

    pdf.set_x(start_x)
    for i, header in enumerate(headers):
        pdf.cell(column_widths[i], 10, header, 1, align="C")
    pdf.ln()

    # üîπ T√°bl√°zat adatok
    pdf.set_font("Arial", "", 10)
    total_price = 0
    total_area = 0
    ossz_adalek = 0
    ossz_darabszam = 0
    ossz_sima_terulet = 0

    if bevitel == "kezi":
        order_data["√úveg t√≠pusa"] = order_data["Term√©kk√≥d"]
    for _, row in order_data.iterrows():
        extrak = ""
        if "Melegperem" in row:
            if row["Melegperem"] == "sz√ºrke" or "fekete":
                extrak += " MP"
        if "T√°vtart√≥" in row:
            if row["T√°vtart√≥"] == "T√°vtart√≥":
                extrak += " TT"
        if "Elt√©r≈ë forma" in row:
            if row["Elt√©r≈ë forma"] == "Elt√©r≈ë forma":
                extrak += " EF"

        col_data = [
            str(row["√úveg t√≠pusa"]),
            str(extrak),
            str(round(row["Sz√©less√©g"])),
            str(round(row["Magass√°g"])),
            str(round(row["Darabsz√°m"])),
            f"{row['Ter√ºlet']:.2f}",
            f"{row['Adal√©k']:.2f}",
            f"{row['√ñssz ter√ºlet']:.2f}",
            f"{row['√År']:.2f}"
        ]

        # üîπ Az "√úveg t√≠pusa" cella t√∂bb sort is elfoglalhat, ez√©rt kisz√°m√≠tjuk a magass√°g√°t
        start_x = pdf.get_x()
        start_y = pdf.get_y()

        pdf.set_x(start_x)
        pdf.multi_cell(column_widths[0], 6, col_data[0], border=1, align="C")
        end_y = pdf.get_y()  # Multi-cell ut√°ni Y poz√≠ci√≥

        row_height = end_y - start_y  # A multi-cell √°ltal haszn√°lt teljes magass√°g

        # Ha a row_height t√∫l alacsony lenne, √°ll√≠tsunk be egy minimum magass√°got
        row_height = max(row_height, 6)

        pdf.set_xy(start_x + column_widths[0], start_y)  # A k√∂vetkez≈ë cella kezd≈ëpoz√≠ci√≥ja

        for i in range(1, len(col_data)):
            pdf.cell(column_widths[i], row_height, col_data[i], border=1, align="C")

        pdf.ln(row_height)  # K√∂vetkez≈ë sorra ugr√°s

        ossz_sima_terulet += row["Ter√ºlet"]
        ossz_darabszam += row["Darabsz√°m"]
        total_area += row["√ñssz ter√ºlet"]
        total_price += row["√År"]
        ossz_adalek += row["Adal√©k"]


    # üîπ √ñsszegz√©s sor igaz√≠t√°sa a megfelel≈ë oszlopok al√°
    pdf.set_x(start_x)
    pdf.set_font("Arial", "B", 11)

    pdf.cell(sum(column_widths[:4]), 10, "√ñsszesen:", 1,
             align="C")  # Az els≈ë h√°rom oszlop (sz√©less√©g, magass√°g, √ºveg t√≠pusa) √∂sszevonva
    #pdf.cell(column_widths[5], 10, "", 1)  # √úres cella az "√ñsszter√ºlet" alatt
    pdf.cell(column_widths[4], 10, f"{round(ossz_darabszam)}",1, align="C")
    pdf.cell(column_widths[5], 10, f"{ossz_sima_terulet:.2f} m¬≤",1, align="C")
    pdf.cell(column_widths[6], 10, f"{ossz_adalek:.2f} m¬≤", 1, align="C")  # Adal√©k alatt
    pdf.cell(column_widths[7], 10, f"{total_area:.2f} m¬≤", 1, align="C")
    pdf.cell(column_widths[8], 10, f"{int(np. ceil(total_price))} lei", 1, align="C")  # √ñsszes√≠tett √°r

    # üîπ Al√°√≠r√°s √©s pecs√©t elhelyez√©se
    # üîπ Megjegyz√©sek szekci√≥
    pdf.ln(20)
    pdf.set_font("Arial", "B", 10)
    pdf.cell(0, 10, "Megjegyz√©sek:", ln=1)

    pdf.set_font("Arial", "", 9)
    pdf.cell(0, 10, "A kis ter√ºlet adal√©k +20%, ha a ter√ºlet kisebb mint 0.3 m¬≤.", ln=1)
    pdf.cell(0, 10, "Extra m√©ret adal√©k +20%, ha a ter√ºlet nagyobb mint 2.5 m¬≤.", ln=1)
    pdf.cell(0, 10, "MP = Meleg peremmel", ln=1)
    pdf.cell(0, 10, "TT = T√°vtart√≥val", ln=1)
    pdf.cell(0, 10, "EF = Elt√©ro forma", ln=1)

    pdf.ln(20)  # T√°vols√°g az al√°√≠r√°sok el≈ëtt

    # üîπ K√©t oszlop az al√°√≠r√°soknak
    x_left = 30  # Bal oldal: C√©g munkat√°rsa
    x_right = 130  # Jobb oldal: √úgyf√©l al√°√≠r√°sa

    pdf.set_font("Arial", "B", 11)

    # üîπ "C√©g munkat√°rsa"
    pdf.set_xy(x_left, pdf.get_y())
    pdf.cell(60, 5, "C√©g munkat√°rsa", ln=1, align="L")

    # üîπ "√úgyf√©l al√°√≠r√°sa"
    pdf.set_xy(x_right, pdf.get_y() - 5)
    pdf.cell(60, 5, "√úgyf√©l al√°√≠r√°sa", ln=1, align="L")

    # üîπ Al√°√≠r√°si vonalak
    pdf.set_xy(x_left, pdf.get_y() + 15)
    pdf.cell(60, 0, "_________________", ln=1, align="L")

    pdf.set_xy(x_right, pdf.get_y())
    pdf.cell(60, 0, "_________________", ln=1, align="L")

    # üîπ Pecs√©t az al√°√≠r√°sok alatt, k√∂z√©pen
    pdf.ln(15)  # T√°vols√°g az al√°√≠r√°sok ut√°n
    pdf.set_x((210 - 150) / 2)  # K√∂z√©pre igaz√≠t√°s
    pdf.image(pecset_path, w=30)  # Pecs√©t beilleszt√©se

    # üîπ Ment√©s
    buffer = io.BytesIO()
    pdf_output = pdf.output(dest='S').encode('latin-1')
    buffer = io.BytesIO(pdf_output)
    buffer.seek(0)
    return buffer
